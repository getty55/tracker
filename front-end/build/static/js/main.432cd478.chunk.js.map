{"version":3,"sources":["App.js","shared/context/auth-context.js","navigation/SideDrawer.js","navigation/Backdrop.js","navigation/Navigation.js","navigation/Input.js","navigation/Button.js","components/Auth.js","shared/util/months.js","components/Expense.js","components/ExpensesList.js","components/YearFilter.js","components/Meter.js","components/ExpensesChart.js","components/Expenses.js","components/NewExpenseForm.js","components/Tracker.js","index.js"],"names":["logoutTimer","AuthContext","createContext","userId","isLoggedIn","token","login","logout","SideDrawer","props","reactDom","createPortal","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","className","onClick","children","document","getElementById","Backdrop","Navigation","auth","useContext","useState","drawerOpen","setDrawerOpen","to","Input","validity","setValidity","inputTouched","setInputTouched","id","type","step","onChange","e","currValue","Date","target","value","func","change","onBlur","Button","disabled","Auth","isLogIn","setIsLogIn","nameAttributes","setNameAttributes","emailAttributes","setEmailAttributes","passwordAttributes","setPasswordAttributes","exists","message","userExists","setUserExists","invalid","invalidCredentials","setInvalidCredentials","submitHandler","a","preventDefault","fetch","process","method","headers","body","JSON","stringify","email","password","res","json","resJson","status","name","prev","initialValue","val","trim","includes","length","months","Expense","date","getMonth","getDate","getFullYear","amount","onDelete","ExpensesList","expenses","map","expense","years","YearFilter","currYear","event","getYear","year","Meter","barPercentage","max","Math","round","monthly","style","height","month","slice","ExpensesChart","monthlyExpenses","Array","fill","currDate","maxExpenseMonth","indexOf","Expenses","setYear","yearlyExpenses","filter","gottenYear","NewExpenseForm","expenseAttributes","setExpenseAttributes","amountAttributes","setAmountAttributes","dateAttributes","setDateAttributes","onAdd","onCancel","onSubmit","Tracker","setExpenses","showForm","setShowForm","useParams","uid","fetchExpenses","useCallback","ok","userExpenses","useEffect","onAddHandler","onDeleteHandler","App","routes","setUserId","setToken","tokenExpiration","setTokenExpiration","expiration","expirationTime","getTime","localStorage","setItem","toISOString","removeItem","remaining","setTimeout","clearTimeout","storedData","parse","getItem","path","element","Provider","ReactDOM","render"],"mappings":"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","file":"static/js/main.432cd478.chunk.js","sourcesContent":["import { useCallback, useState, useEffect } from 'react';\nimport { AuthContext } from './shared/context/auth-context';\nimport { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom';\nimport Navigation from './navigation/Navigation';\nimport Auth from './components/Auth';\nimport Tracker from './components/Tracker';\nimport './App.css';\n\nlet logoutTimer;\nfunction App() {\n  const [userId, setUserId] = useState(null);\n  const [token, setToken] = useState(null);\n  const [tokenExpiration, setTokenExpiration] = useState();\n\n  const login = useCallback((uid, token, expiration) => {\n    setUserId(uid);\n    setToken(token);\n\n    const expirationTime = expiration || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpiration(expirationTime);\n\n    localStorage.setItem('loginToken', JSON.stringify({ userId: uid, token, expiration: expirationTime.toISOString() }));\n  }, []);\n\n  const logout = useCallback(() => {\n    setUserId(null);\n    setToken(null);\n    setTokenExpiration(null);\n    localStorage.removeItem('loginToken');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpiration) {\n      const remaining = tokenExpiration.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remaining);\n    } else clearTimeout(logoutTimer);\n  }, [token, logout, tokenExpiration]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('loginToken'));\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  let routes;\n  if (token) {\n    routes = (\n      <Routes>\n        <Route path='/:uid/tracker' element={<Tracker />} />\n        <Route path='*' element={<Navigate to={`/${userId}/tracker`} />} />\n      </Routes>\n    );\n  } else {\n    routes = (\n      <Routes>\n        <Route path='/authenticate' element={<Auth />} />\n        <Route path='*' element={<Navigate to='/authenticate' />} />\n      </Routes>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <AuthContext.Provider\n        value={{ userId, isLoggedIn: !!token, token: token, login, logout }} >\n        <BrowserRouter>\n          <Navigation />\n          <main>\n            {routes}\n          </main>\n        </BrowserRouter>\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n    userId: null,\n    isLoggedIn: false,\n    token: null,\n    login: () => { },\n    logout: () => { }\n});","import reactDom from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n    return reactDom.createPortal(\n        <CSSTransition\n            in={props.show}\n            timeout={300}\n            classNames='slide-in-left'\n            mountOnEnter\n            unmountOnExit >\n            <aside\n                className='side-drawer'\n                onClick={props.onClick} >\n                {props.children}\n            </aside>\n        </CSSTransition>,\n        document.getElementById('side-drawer')\n    );\n};\n\nexport default SideDrawer;","import reactDom from \"react-dom\";\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n    return reactDom.createPortal(\n        <div\n            className='backdrop'\n            onClick={props.onClick}></div>,\n        document.getElementById('backdrop')\n    );\n};\n\nexport default Backdrop;","import { Fragment, useState, useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AuthContext } from '../shared/context/auth-context';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from './Backdrop';\nimport './Navigation.css';\n\nconst Navigation = () => {\n    const auth = useContext(AuthContext);\n    const [drawerOpen, setDrawerOpen] = useState(false);\n\n    return (\n        <Fragment>\n            {drawerOpen && <Backdrop onClick={() => setDrawerOpen(false)} />}\n            <SideDrawer show={drawerOpen} onClick={() => setDrawerOpen(false)} >\n                <div className='navigation-drawer'>\n                    {auth.isLoggedIn && <NavLink\n                        to='/authenticate'\n                        onClick={auth.logout} >LOG OUT</NavLink>}\n                </div>\n            </SideDrawer>\n            <div className='navigation'>\n                {auth.isLoggedIn && <div className='navigation-burger'>\n                    <button onClick={() => setDrawerOpen(true)}>\n                        <span />\n                        <span />\n                        <span />\n                    </button>\n                </div>}\n                <div className='navigation-title'>\n                    <h2>EXPENSES TRACKER</h2>\n                </div>\n                <div className='navigation-right'>\n                    {auth.isLoggedIn && <NavLink\n                        to='/authenticate'\n                        onClick={auth.logout} >LOG OUT</NavLink>}\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Navigation;","import { useState } from 'react';\nimport './Input.css';\n\nconst Input = props => {\n    const [validity, setValidity] = useState(false);\n    const [inputTouched, setInputTouched] = useState(false);\n\n    const onChangeHandler = e => {\n        const currValue = props.type === 'date' ? new Date(e.target.value) : e.target.value;\n\n        setValidity(props.func(currValue));\n        props.change(currValue, props.func(currValue));\n\n        if (props.type === 'number') setInputTouched(true);\n    };\n\n    return (\n        <div className={!validity && inputTouched ? 'input-invalid' : 'input'}>\n            <label>{props.id}</label>\n            <input\n                id={props.id}\n                type={props.type}\n                step={props.step || '1'}\n                onChange={onChangeHandler}\n                onBlur={() => setInputTouched(true)} />\n            {(!validity && inputTouched) && <p>Enter a valid {props.id}</p>}\n        </div>\n    );\n};\n\nexport default Input;","import './Button.css';\n\nconst Button = props => {\n    return (\n        <button\n            className='button'\n            type={props.type}\n            onClick={props.onClick}\n            disabled={props.disabled} >\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;","import { useState, useContext } from 'react';\nimport { AuthContext } from '../shared/context/auth-context';\nimport Input from '../navigation/Input';\nimport Button from '../navigation/Button';\nimport './Auth.css';\n\nconst Auth = () => {\n    const auth = useContext(AuthContext);\n    const [isLogIn, setIsLogIn] = useState(true);\n\n    const [nameAttributes, setNameAttributes] = useState({ value: '', validity: false })\n    const [emailAttributes, setEmailAttributes] = useState({ value: '', validity: false });\n    const [passwordAttributes, setPasswordAttributes] = useState({ value: '', validity: false });\n\n    const [userExists, setUserExists] = useState({ exists: false, message: '' });\n    const [invalidCredentials, setInvalidCredentials] = useState({ invalid: false, message: '' });\n\n    const submitHandler = async e => {\n        e.preventDefault();\n        if (isLogIn) {\n            try {\n                const res = await fetch(process.env.REACT_APP_BACKEND_URL + '/users/login', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ email: emailAttributes.value, password: passwordAttributes.value })\n                });\n                const resJson = await res.json();\n                if (res.status === 401 || res.status === 403) {\n                    setInvalidCredentials({ invalid: true, message: resJson.message });\n                    return;\n                }\n                if (resJson.userId) auth.login(resJson.userId, resJson.token);\n            } catch (err) { }\n        } else {\n            try {\n                const res = await fetch(process.env.REACT_APP_BACKEND_URL + '/users/signup', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ name: nameAttributes.value, email: emailAttributes.value, password: passwordAttributes.value })\n                });\n                const resJson = await res.json();\n                if (res.status === 404) {\n                    setUserExists({ exists: true, message: resJson.message });\n                    return;\n                }\n                if (resJson.userId) auth.login(resJson.userId, resJson.token);\n            } catch (err) { }\n        }\n    };\n\n    return (\n        <div className='auth'>\n            <div className='auth-form'>\n                <div className='auth-switch'>\n                    <h3>{!isLogIn ? 'SIGN UP' : 'LOG IN'}</h3>\n                </div>\n                <Button\n                    onClick={() => setIsLogIn(prev => !prev)} >\n                    {!isLogIn ? 'LOG IN' : 'SIGN UP'}\n                </Button>\n                <form>\n                    {!isLogIn && <div>\n                        <Input\n                            id='name'\n                            type='text'\n                            initialValue={''}\n                            func={val => val.trim() !== ''}\n                            change={(value, validity) => setNameAttributes({ value, validity })} />\n                    </div>}\n                    <div>\n                        <Input\n                            id='email'\n                            type='email'\n                            initialValue={''}\n                            func={val => val.includes('@')}\n                            change={(value, validity) => {\n                                setEmailAttributes({ value, validity });\n                                invalidCredentials.invalid && setInvalidCredentials({ invalid: false, message: '' });\n                                userExists.exists && setUserExists({ exists: false, message: '' });\n                            }} />\n                        {userExists.exists && <h5>{userExists.message}</h5>}\n                    </div>\n                    <div>\n                        <Input\n                            id='password'\n                            type='password'\n                            initialValue={''}\n                            func={val => val.length > 5}\n                            change={(value, validity) => {\n                                setPasswordAttributes({ value, validity });\n                                invalidCredentials.invalid && setInvalidCredentials({ invalid: false, message: '' });\n                            }} />\n                        {invalidCredentials.invalid && <h5>{invalidCredentials.message}</h5>}\n                    </div>\n                    <Button\n                        onClick={submitHandler}\n                        disabled={isLogIn ? !emailAttributes.validity || !passwordAttributes.validity :\n                            !nameAttributes.validity || !emailAttributes.validity || !passwordAttributes.validity} >\n                        SUBMIT\n                    </Button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;","export const months = ['January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'];","import { months } from '../shared/util/months';\nimport './Expense.css';\n\nconst Expense = props => {\n    return (\n        <div className='expense'>\n            <div className='expense-date'>\n                <div className='expense-date__month'>\n                    <p>{months[props.date.getMonth()]}</p>\n                </div>\n                <div className='expense-date__day'>\n                    <p>{props.date.getDate() + 1}</p>\n                </div>\n                <div className='expense-date__year'>\n                    <p>{props.date.getFullYear()}</p>\n                </div>\n            </div>\n            <div className='expense-amount'>\n                <h3>${props.amount}</h3>\n            </div>\n            <div className='expense-name'>\n                <h2>{props.name}</h2>\n            </div>\n            <button\n                className='expense-delete'\n                onClick={() => props.onDelete(props.id)} >X</button>\n        </div>\n    );\n}\n\nexport default Expense;","import Expense from \"./Expense\";\nimport './ExpensesList.css';\n\nconst ExpensesList = props => {\n    return (\n        <div className='expenses-list'>\n            {props.expenses.map(expense => <Expense\n                key={expense.id}\n                id={expense.id}\n                name={expense.name}\n                amount={expense.amount}\n                date={new Date(expense.date)}\n                onDelete={id => props.onDelete(id)} />)}\n        </div>\n    );\n};\n\nexport default ExpensesList;","import './YearFilter.css';\nconst years = ['2019', '2020', '2021', '2022'];\n\nconst YearFilter = props => {\n    return (\n        <select\n            className='year-filter'\n            value={props.currYear}\n            onChange={event => props.getYear(event.target.value)} >\n            {years.map(year => <option key={year}>{year}</option>)}\n        </select>\n    );\n};\n\nexport default YearFilter;","import './Meter.css';\n\nconst Meter = props => {\n    let barPercentage = '0%';\n    if (props.max > 0) barPercentage = Math.round((props.monthly / props.max) * 100) + '%';\n\n    return (\n        <div className='meter'>\n            <div className='bar'>\n                <div\n                    className='percentage'\n                    style={{ height: barPercentage }}></div>\n            </div>\n            <label>{props.month.slice(0, 3) + ' '}</label>\n        </div>\n    );\n};\n\nexport default Meter;","import Meter from \"./Meter\";\nimport { months } from '../shared/util/months';\nimport './ExpensesChart.css';\n\nconst ExpensesChart = props => {\n    let monthlyExpenses = new Array(12).fill(0);\n\n    for (const expense of props.expenses) {\n        const currDate = new Date(expense.date);\n        monthlyExpenses[currDate.getMonth()] += expense.amount;\n    }\n\n    const maxExpenseMonth = Math.max(...monthlyExpenses);\n\n    return (\n        <div className='chart'>\n            {months.map(month => {\n                return (\n                    <Meter\n                        key={month}\n                        month={month}\n                        monthly={monthlyExpenses[months.indexOf(month)]}\n                        max={maxExpenseMonth} />\n                );\n            })}\n        </div>\n    );\n};\n\nexport default ExpensesChart;","import { useState } from 'react';\nimport ExpensesList from './ExpensesList';\nimport YearFilter from './YearFilter';\nimport ExpensesChart from './ExpensesChart';\nimport './Expenses.css';\n\nconst Expenses = props => {\n    const [year, setYear] = useState('2021');\n    const yearlyExpenses = props.expenses && props.expenses.filter(expense => new Date(expense.date).getFullYear() === +year);\n\n    return (\n        <div className='expenses'>\n            <YearFilter\n                currYear={year}\n                getYear={gottenYear => setYear(gottenYear)} />\n            {yearlyExpenses && <ExpensesChart expenses={yearlyExpenses} />}\n            <ExpensesList\n                expenses={yearlyExpenses}\n                onDelete={id => props.onDelete(id)} />\n        </div>\n    );\n};\n\nexport default Expenses;","import { useState } from \"react\";\nimport Input from \"../navigation/Input\";\nimport Button from \"../navigation/Button\";\nimport './NewExpenseForm.css';\n\nconst NewExpenseForm = props => {\n    const [expenseAttributes, setExpenseAttributes] = useState({ value: '', validity: false });\n    const [amountAttributes, setAmountAttributes] = useState({ value: 0, validity: false });\n    const [dateAttributes, setDateAttributes] = useState({ value: '', validity: false });\n\n    const submitHandler = async event => {\n        event.preventDefault();\n        props.onAdd(expenseAttributes.value, amountAttributes.value, dateAttributes.value);\n        props.onCancel();\n    };\n\n    return (\n        <div className='new-expense'>\n            <form onSubmit={submitHandler}>\n                <div>\n                    <Input\n                        id='expense'\n                        type='text'\n                        initialValue={''}\n                        func={val => val.trim() !== ''}\n                        change={(value, validity) => setExpenseAttributes({ value, validity })} />\n                </div>\n                <div>\n                    <Input\n                        id='amount'\n                        type='number'\n                        step='0.01'\n                        initialValue={0}\n                        func={val => val > 0}\n                        change={(value, validity) => setAmountAttributes({ value, validity })} />\n                </div>\n                <div>\n                    <Input\n                        id='date'\n                        type='date'\n                        initialValue={new Date()}\n                        func={val => val.getFullYear() < 2023 && val.getFullYear() > 2018}\n                        change={(value, validity) => setDateAttributes({ value, validity })} />\n                </div>\n                <div className='new-expense-form__buttons'>\n                    <Button onClick={props.onCancel}>CANCEL</Button>\n                    <Button\n                        type='submit'\n                        disabled={!expenseAttributes.validity || !amountAttributes.validity || !dateAttributes.validity} >\n                        SUBMIT\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default NewExpenseForm;","import { useState, useEffect, useCallback, useContext } from 'react';\nimport { AuthContext } from '../shared/context/auth-context';\nimport { useParams } from 'react-router';\nimport Expenses from './Expenses';\nimport NewExpenseForm from './NewExpenseForm';\nimport Button from '../navigation/Button';\nimport './Tracker.css';\n\nconst Tracker = () => {\n    const auth = useContext(AuthContext);\n    const [expenses, setExpenses] = useState([]);\n    const [showForm, setShowForm] = useState(false);\n\n    const userId = useParams().uid;\n    const fetchExpenses = useCallback(async () => {\n        try {\n            const res = await fetch(`${process.env.REACT_APP_BACKEND_URL}/expenses/user/${userId}`);\n            const resJson = await res.json();\n            if (res.ok) setExpenses(resJson.userExpenses);\n        } catch (err) { }\n    }, [userId]);\n\n    useEffect(() => {\n        fetchExpenses();\n    }, [fetchExpenses]);\n\n    const onAddHandler = async (expense, amount, date) => {\n        try {\n            const res = await fetch(process.env.REACT_APP_BACKEND_URL + '/expenses', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + auth.token\n                },\n                body: JSON.stringify({ name: expense, amount, date })\n            });\n            if (res.ok) fetchExpenses();\n        } catch (err) { }\n    };\n\n    const onDeleteHandler = async id => {\n        try {\n            const res = await fetch(`${process.env.REACT_APP_BACKEND_URL}/expenses/${id}`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + auth.token\n                }\n            });\n            if (res.ok) fetchExpenses();\n        } catch (err) { }\n    };\n\n    return (\n        <div className='tracker'>\n            {showForm && <NewExpenseForm\n                onAdd={onAddHandler}\n                onCancel={() => setShowForm(false)} />}\n            {!showForm && <Button onClick={() => setShowForm(true)}>ADD EXPENSE</Button>}\n            <Expenses\n                expenses={expenses}\n                onDelete={onDeleteHandler} />\n        </div>\n    );\n};\n\nexport default Tracker;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}